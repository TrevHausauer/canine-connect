@page "/messages"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using CanineConnect.Models
@using CanineConnect.Data
@using StateObjects
@implements IAsyncDisposable
@inject State state
@inject IDbContextFactory<CanineConnect.Data.CanineConnectContext> DbFactory

<PageTitle>View Messages</PageTitle>

<h1>View Messages</h1>

<QuickGrid Class="table" Items="userMessages">
    <PropertyColumn Property="message => message.Text" />
    <PropertyColumn Property="message => message.Timestamp" />
    <PropertyColumn Property="message => message.Sender.Email" Title="Sender Email" />
    <PropertyColumn Property="message => message.Receiver.Email" Title=" Sender Email" />

    <TemplateColumn Context="message">

        @if (message.SenderId == state.ActiveUser.Id)
        {
            <span><a href="@($"sendmessage/{message.ReceiverId}")">Reply</a> |</span>
            <span><a href="@($"messages/edit?id={message.Id}")">Edit</a> |</span>
        }
        else
        {
            <span><a href="@($"sendmessage/{message.SenderId}")">Reply</a> |</span>
        }
        <a href="@($"messages/details?id={message.Id}")">Details</a> |
        <a href="@($"messages/delete?id={message.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private CanineConnectContext context = default!;
    private IQueryable<Message>? userMessages;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
        userMessages = context.Message
            .Include(e => e.Sender)
            .Include(e => e.Receiver)
            .Where(e => e.SenderId == state.ActiveUser.Id || e.ReceiverId == state.ActiveUser.Id);

    }
   
    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
